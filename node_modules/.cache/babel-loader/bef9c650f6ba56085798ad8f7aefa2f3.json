{"ast":null,"code":"var _jsxFileName = \"/srv/www/react-profile-cards/src/index.js\";\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\n\n// Définir la structure JSX pour une carte de profil unique\nconst CarteProfil = ({\n  nom,\n  description,\n  competences\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"profile-card\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, nom), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, description), /*#__PURE__*/React.createElement(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, competences.map((competence, index) => /*#__PURE__*/React.createElement(\"li\", {\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }\n}, competence))));\n\n// Données de profil\nconst profils = [{\n  nom: 'Jane Doe',\n  description: 'Développeuse Web de Berlin',\n  competences: ['JavaScript', 'React', 'CSS']\n}, {\n  nom: 'John Smith',\n  description: 'Ingénieur Frontend de Hambourg',\n  competences: ['HTML', 'CSS', 'JavaScript']\n}, {\n  nom: 'Emily Johnson',\n  description: 'Designer UI/UX de Munich',\n  competences: ['Figma', 'Adobe XD', 'CSS']\n}];\n\n// Composant principal App\nconst App = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }\n}, profils.map((profil, index) => /*#__PURE__*/React.createElement(CarteProfil, {\n  key: index,\n  nom: profil.nom,\n  description: profil.description,\n  competences: profil.competences,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }\n})));\n\n// Initialiser et rendre l'application\nconst app = document.getElementById('app');\nconst root = createRoot(app);\nroot.render(/*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }\n}));","map":{"version":3,"names":["React","createRoot","CarteProfil","nom","description","competences","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","competence","index","key","profils","App","profil","app","document","getElementById","root","render"],"sources":["/srv/www/react-profile-cards/src/index.js"],"sourcesContent":["import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\n// Définir la structure JSX pour une carte de profil unique\nconst CarteProfil = ({ nom, description, competences }) => (\n  <div className=\"profile-card\">\n    <h2>{nom}</h2>\n    <p>{description}</p>\n    <ul>\n      {competences.map((competence, index) => (\n        <li key={index}>{competence}</li>\n      ))}\n    </ul>\n  </div>\n);\n\n// Données de profil\nconst profils = [\n  { nom: 'Jane Doe', description: 'Développeuse Web de Berlin', competences: ['JavaScript', 'React', 'CSS'] },\n  { nom: 'John Smith', description: 'Ingénieur Frontend de Hambourg', competences: ['HTML', 'CSS', 'JavaScript'] },\n  { nom: 'Emily Johnson', description: 'Designer UI/UX de Munich', competences: ['Figma', 'Adobe XD', 'CSS'] }\n];\n\n// Composant principal App\nconst App = () => (\n  <div>\n    {profils.map((profil, index) => (\n      <CarteProfil \n        key={index}\n        nom={profil.nom}\n        description={profil.description}\n        competences={profil.competences}\n      />\n    ))}\n  </div>\n);\n\n// Initialiser et rendre l'application\nconst app = document.getElementById('app');\nconst root = createRoot(app);\nroot.render(<App />);\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;;AAE7C;AACA,MAAMC,WAAW,GAAGA,CAAC;EAAEC,GAAG;EAAEC,WAAW;EAAEC;AAAY,CAAC,kBACpDL,KAAA,CAAAM,aAAA;EAAKC,SAAS,EAAC,cAAc;EAAAC,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBAC3Bb,KAAA,CAAAM,aAAA;EAAAE,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GAAKV,GAAQ,CAAC,eACdH,KAAA,CAAAM,aAAA;EAAAE,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GAAIT,WAAe,CAAC,eACpBJ,KAAA,CAAAM,aAAA;EAAAE,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GACGR,WAAW,CAACS,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACjChB,KAAA,CAAAM,aAAA;EAAIW,GAAG,EAAED,KAAM;EAAAR,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GAAEE,UAAe,CACjC,CACC,CACD,CACN;;AAED;AACA,MAAMG,OAAO,GAAG,CACd;EAAEf,GAAG,EAAE,UAAU;EAAEC,WAAW,EAAE,4BAA4B;EAAEC,WAAW,EAAE,CAAC,YAAY,EAAE,OAAO,EAAE,KAAK;AAAE,CAAC,EAC3G;EAAEF,GAAG,EAAE,YAAY;EAAEC,WAAW,EAAE,gCAAgC;EAAEC,WAAW,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,YAAY;AAAE,CAAC,EAChH;EAAEF,GAAG,EAAE,eAAe;EAAEC,WAAW,EAAE,0BAA0B;EAAEC,WAAW,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,KAAK;AAAE,CAAC,CAC7G;;AAED;AACA,MAAMc,GAAG,GAAGA,CAAA,kBACVnB,KAAA,CAAAM,aAAA;EAAAE,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GACGK,OAAO,CAACJ,GAAG,CAAC,CAACM,MAAM,EAAEJ,KAAK,kBACzBhB,KAAA,CAAAM,aAAA,CAACJ,WAAW;EACVe,GAAG,EAAED,KAAM;EACXb,GAAG,EAAEiB,MAAM,CAACjB,GAAI;EAChBC,WAAW,EAAEgB,MAAM,CAAChB,WAAY;EAChCC,WAAW,EAAEe,MAAM,CAACf,WAAY;EAAAG,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CACjC,CACF,CACE,CACN;;AAED;AACA,MAAMQ,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;AAC1C,MAAMC,IAAI,GAAGvB,UAAU,CAACoB,GAAG,CAAC;AAC5BG,IAAI,CAACC,MAAM,cAACzB,KAAA,CAAAM,aAAA,CAACa,GAAG;EAAAX,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}